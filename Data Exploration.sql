----------------------------------------------
--------------Exploring the Database----------
----------------------------------------------
----Exploring all objects in the DB
SELECT *
FROM
INFORMATION_SCHEMA.TABLES;

----Exploring all columns in the DB
SELECT *
FROM
INFORMATION_SCHEMA.COLUMNS;

SELECT *
FROM
INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'dim_customers';


----------------------------------------------
--------------Exploring the Dimensions--------
----------------------------------------------

------------Exploring the countries of customers--------
SELECT DISTINCT
      [country]
FROM [DataWarehouse].[Gold].[dim_customers];

------Explore all categories-------------
  SELECT DISTINCT
      [category]
     ,[subcategory]
     ,product_name
  
  FROM [DataWarehouse].[Gold].[dim_products]
  ORDER BY 1,2,3;


  ---------------Find the first and last order dates-------
  -------------Total number of year of sales---------------
  SELECT 
      MIN([order_date]) first_order_date,
      MAX([order_date]) last_order_date,
      DATEDIFF(YEAR, MIN([order_date]), MAX([order_date])) AS years_of_sales

  FROM [DataWarehouse].[Gold].[fact_sales];

---------Find the youngest and oldest customer-------
SELECT DISTINCT
      MIN(birth_date) oldest_customer_birthdate,
      DATEDIFF(year, MIN(birth_date), GETDATE()) oldest_customer_age,
      MAX(birth_date) youngest_customer_birthdate,
      DATEDIFF(year, MAX(birth_date), GETDATE()) youngest_customer_age
FROM [DataWarehouse].[Gold].[dim_customers];


--------Find the total sales
SELECT 
      SUM(sales_amount) total_sales
  FROM [DataWarehouse].[Gold].[fact_sales];

----------Find the total number of orders
SELECT 
      COUNT(DISTINCT order_number) total_orders
  FROM [DataWarehouse].[Gold].[fact_sales];

-------Find how many items are sold
SELECT 
      SUM(quantity) total_quantity
  FROM [DataWarehouse].[Gold].[fact_sales];

 ----------find the average selling price
 SELECT 
      AVG(price) avg_price
  FROM [DataWarehouse].[Gold].[fact_sales];

------------Find the total number of products
SELECT 
      COUNT(DISTINCT product_key) total_products
  FROM [DataWarehouse].[Gold].[dim_products];

--------Find the total number of customers
SELECT 
      COUNT(DISTINCT customer_key) total_customers
  FROM [DataWarehouse].[Gold].[dim_customers];

-------Find the total number of customers that has placed an order 

SELECT 
      COUNT(DISTINCT customer_key) customers_with_an_order
  FROM [DataWarehouse].[Gold].[fact_sales];


-------Generate a report that shows all key metrics of the business.
SELECT 
    'Total Sales' AS measure_name, 
    SUM(sales_amount) AS measure_value
FROM [Gold].[fact_sales]
UNION ALL
SELECT 
    'Total Quantity', 
    SUM(quantity) 
FROM [Gold].[fact_sales]
UNION ALL
SELECT 
    'Average Price', 
    AVG(price) 
FROM [Gold].[fact_sales]
UNION ALL
SELECT 
    'Total Number of Orders', 
    COUNT(DISTINCT order_number) 
FROM [Gold].[fact_sales]
UNION ALL
SELECT 
    'Total Number of Products', 
    COUNT(DISTINCT product_key) 
FROM [Gold].[dim_products]
UNION ALL
SELECT 
    'Total Number of Customers', 
    COUNT(DISTINCT customer_key) 
FROM [Gold].[dim_customers]


-------------–Find total customers by countries

SELECT 
    country,
    COUNT(DISTINCT customer_key) 'Total_Number_of_Customers'
FROM [Gold].[dim_customers]
GROUP BY country
ORDER BY Total_Number_of_Customers desc;


-------------–Find total customers by gender
SELECT 
    gender,
    COUNT(DISTINCT customer_key) 'Total_Number_of_Customers'
FROM [Gold].[dim_customers]
GROUP BY gender
ORDER BY Total_Number_of_Customers desc;

-------------–Find total products by sub-category
SELECT 
    subcategory,
    COUNT(DISTINCT product_key) 'Total_Number_of_products'
FROM [Gold].[dim_products]
GROUP BY subcategory
ORDER BY Total_Number_of_products desc;

-------------–What is the average costs in each category?
SELECT 
    category,
    AVG(cost) 'Average_cost'
FROM [Gold].[dim_products]
GROUP BY category
ORDER BY Average_cost desc;

-------------–What is the total revenue generated for each sub-category?
SELECT 
    p.subcategory,
    SUM(s.sales_amount)  'Total_Revenue'   
FROM [Gold].[fact_sales] s
LEFT JOIN [Gold].[dim_products] p 
ON s.product_key = p.product_key
GROUP BY p.subcategory
ORDER BY Total_Revenue DESC;

-------------–find total revenue generated by each customer
SELECT 
    c.customer_key,
    c.first_name,
    c.last_name,
    SUM(s.sales_amount)  'Total_Revenue'   
FROM [Gold].[fact_sales] s
LEFT JOIN [Gold].[dim_customers] c 
ON s.customer_key = c.customer_key
GROUP BY 
    c.customer_key,
    c.first_name,
    c.last_name
ORDER BY Total_Revenue DESC;

-------------–what is the distribution of sold items across countries?
SELECT 
    c.country,
    SUM(s.quantity)  'Total_sold_items'   
FROM [Gold].[fact_sales] s
LEFT JOIN [Gold].[dim_customers] c 
ON s.customer_key = c.customer_key
GROUP BY 
    c.country
ORDER BY Total_sold_items DESC;


-----------What are the five high performing products in terms of sales?


SELECT TOP 5
    p.product_key,
    p.product_name,
    SUM(s.sales_amount)  'Total_Revenue'   
FROM [Gold].[fact_sales] s
LEFT JOIN [Gold].[dim_products] p 
ON s.product_key = p.product_key
GROUP BY p.product_key,
         p.product_name
ORDER BY Total_Revenue DESC;


-----------What are the five high performing products in terms of sales?


SELECT TOP 5
    p.product_key,
    p.product_name,
    SUM(s.sales_amount)  'Total_Revenue'   
FROM [Gold].[fact_sales] s
LEFT JOIN [Gold].[dim_products] p 
ON s.product_key = p.product_key
GROUP BY p.product_key,
         p.product_name
ORDER BY Total_Revenue ASC;


    SELECT 
        p.product_key,
        p.product_name,
        SUM(s.sales_amount)  'Total_Revenue',
        ROW_NUMBER() OVER (ORDER BY SUM(s.sales_amount) DESC) AS product_rank
    FROM [Gold].[fact_sales] s
    LEFT JOIN [Gold].[dim_products] p 
    ON s.product_key = p.product_key
    GROUP BY p.product_key,
             p.product_name;


SELECT 
    *
FROM(
    SELECT 
        p.product_key,
        p.product_name,
        SUM(s.sales_amount)  'Total_Revenue',
        ROW_NUMBER() OVER (ORDER BY SUM(s.sales_amount) DESC) AS product_rank
    FROM [Gold].[fact_sales] s
    LEFT JOIN [Gold].[dim_products] p 
    ON s.product_key = p.product_key
    GROUP BY p.product_key,
             p.product_name)t
WHERE product_rank <= 5;


---------Find the top 10 customers with the highest revenue-----
SELECT TOP 10
    c.customer_key,
    CONCAT(c.first_name,' ', c.last_name) AS Customer_Name,    
    SUM(s.sales_amount)  'Total_Revenue'   
FROM [Gold].[fact_sales] s
LEFT JOIN [Gold].[dim_customers] c 
ON s.customer_key = c.customer_key
GROUP BY 
    c.customer_key,
    CONCAT(c.first_name,' ', c.last_name)
ORDER BY Total_Revenue DESC;


-------------Find the top 3 customers with the lowest orders
SELECT TOP 3
    c.customer_key,
    c.first_name,
    c.last_name,
    COUNT(DISTINCT order_number)  'Total_orders'   
FROM [Gold].[fact_sales] s
LEFT JOIN [Gold].[dim_customers] c 
ON s.customer_key = c.customer_key
GROUP BY 
    c.customer_key,
    c.first_name,
    c.last_name
ORDER BY Total_orders ASC;


-----------Sales over years------------

SELECT
    YEAR(order_date) AS order_year,
    MONTH(order_date) AS order_month_number,
    FORMAT(order_date, 'MMM') AS order_month_name,
    SUM(sales_amount) AS total_sales
FROM gold.fact_sales
WHERE order_date IS NOT NULL 
GROUP BY YEAR(order_date), MONTH(order_date), FORMAT(order_date, 'MMM');


-------------–Top 5 countries by Revenue-------

SELECT TOP 5
    c.country,
    SUM(s.sales_amount)  'Total_Revenue'   
FROM [Gold].[fact_sales] s
LEFT JOIN [Gold].[dim_customers] c 
ON s.customer_key = c.customer_key
GROUP BY c.country
ORDER BY Total_Revenue DESC;

-------------–What is the total revenue generated for each category?
SELECT 
    p.category,
    SUM(s.sales_amount)  'Total_Revenue'   
FROM [Gold].[fact_sales] s
LEFT JOIN [Gold].[dim_products] p 
ON s.product_key = p.product_key
GROUP BY p.category
ORDER BY Total_Revenue DESC;